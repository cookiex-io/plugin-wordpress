name: CI

on:
  push:
    tags:
      - '*'

jobs:
  call-install-deps:
    uses: ./.github/workflows/install-deps.yml
    with:
      mode: 'prod'
    secrets: inherit

  build:
    runs-on: ubuntu-latest
    needs: call-install-deps

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2.1.4

      - name: Restore Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            vendor
            node_modules
            dist
          key: deps-prod-${{ hashFiles('composer.lock') }}-${{ hashFiles('package-lock.json') }}
          fail-on-cache-miss: true
        id: cache

      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Update Version in WordPress Files
        run: |
          sed -i -E "s/(const PLUGIN_VERSION = ')[^']*(';)/\1${{ env.RELEASE_VERSION }}\2/" src/Cookiex_CMP.php
          sed -i -E 's/([[:blank:]]*\*[[:blank:]]*Version:[[:blank:]]*).*/\1${{ env.RELEASE_VERSION }}/' cookiex-cmp.php
          sed -i -E 's/Stable tag: .*/Stable tag: ${{ env.RELEASE_VERSION }}/' README.txt

      - name: Update Resources
        uses: test-room-7/action-update-file@v1
        with:
          file-path: |
            src/Cookiex_CMP.php
            cookiex-cmp.php
            README.txt
          commit-msg: Update Version in WordPress specific files
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Release Package
        run: |
          mkdir cookiex-cmp
          rsync -av \
            --exclude='.*' \
            --exclude='composer.lock' \
            --exclude='package-lock.json' \
            --exclude='**/composer.lock' \
            --exclude='**/package-lock.json' \
            --exclude='dist/index.html' \
            --exclude='resources/admin/index.html' \
            --exclude='build.sh' \
            --exclude='phpunit.xml.dist' \
            --exclude='phpcs.xml' \
            --exclude='phpstan.neon' \
            --exclude='phpcs-report.xml' \
            --exclude='eslint.config.js' \
            --exclude='bud.config.js' \
            --exclude='tests' \
            --exclude='bin' \
            --exclude='node_modules' \
            ./ cookiex-cmp/
        shell: bash

      - name: Run WordPress Plugin Check
        uses: wordpress/plugin-check-action@v1
        with:
          build-dir: 'cookiex-cmp'

      - name: Zip Release Package
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y zip
          zip -r cookiex-cmp-${{ env.RELEASE_VERSION }}.zip cookiex-cmp

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          artifacts: "cookiex-cmp-${{ env.RELEASE_VERSION }}.zip"
